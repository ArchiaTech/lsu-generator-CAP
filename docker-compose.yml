version: '3.8'

services:
  # Base de donn√©es PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: lsu-postgres
    environment:
      POSTGRES_DB: lsu_db
      POSTGRES_USER: lsu_user
      POSTGRES_PASSWORD: lsu_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - lsu-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lsu_user -d lsu_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Backend FastAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: lsu-backend
    environment:
      - DATABASE_URL=postgresql://lsu_user:lsu_password@postgres:5432/lsu_db
      - SECRET_KEY=dev-secret-key-change-in-production
      - JWT_ALGORITHM=HS256
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
    volumes:
      - ./backend:/app
      - /app/__pycache__
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - lsu-network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: lsu-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - lsu-network
    command: npm start

  # Redis pour cache et sessions (optionnel)
  redis:
    image: redis:7-alpine
    container_name: lsu-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - lsu-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx pour reverse proxy (optionnel en dev)
  nginx:
    image: nginx:alpine
    container_name: lsu-nginx
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - frontend
      - backend
    networks:
      - lsu-network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  lsu-network:
    driver: bridge 